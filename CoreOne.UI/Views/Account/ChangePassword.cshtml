@using CoreOne.DOMAIN.Models
@using CoreOne.UI.Controllers
@using CoreOne.UI.Helper
@inject MenuLayoutController MenuController
@inject IHttpContextAccessor HttpContextAccessor





@{
    Layout = null;

    var userId = TokenHelper.GetUserIdFromToken(HttpContextAccessor.HttpContext);
    bool TokenExpiry = TokenHelper.IsTokenValid(HttpContextAccessor.HttpContext);
    var menuItems = new List<MenuItem>();
    User user = new User();
    if (!userId.HasValue || !TokenExpiry)
    {
        TempData["message"] = "Please Login again";
        TempData["messagetype"] = "error";
        // Redirect to login if userId is null
        HttpContextAccessor.HttpContext.Response.Redirect("/Account/Login");
        // Don't return; let the layout render a minimal page
    }
    else
    {
        var TokenUser = TokenHelper.UserFromToken(Context);
        // Load menu
        if (TokenUser is not null)
        {
            user = TokenUser;
        }
        menuItems = await MenuController.UserMenu(Context);
        if (menuItems.Count == 0)
        {
            TokenHelper.RemoveToken(Context);
            // Redirect to login if userId is null
            HttpContextAccessor.HttpContext.Response.Redirect("/Account/Login");
        }



    }
    // Group menu items by Parent
    // Group items by ParentID (i.e., top-level menu sections)
    var groupedMenu = menuItems
        .GroupBy(m => new { m.ParentID, m.ParentName, m.ParentSequence, m.MenuSymbol })
        .OrderBy(g => g.Key.ParentSequence ?? 0)
        .ToList();
}


<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<title>Change Password| CoreOne</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta content="A fully featured admin theme which can be used to build CRM, CMS, etc." name="description" />
<meta content="Coderthemes" name="author" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<link rel="shortcut icon" href="~/assets/images/favicon.ico">

<!-- Plugins css -->
<link href="~/assets/libs/dropzone/min/dropzone.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/libs/dropify/css/dropify.min.css" rel="stylesheet" type="text/css" />

<!-- Bootstrap css -->
<link href="~/assets/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<!-- App css -->
<link href="~/assets/css/app.min.css" rel="stylesheet" type="text/css" id="app-style" />
<!-- icons -->
<link href="~/assets/css/icons.min.css" rel="stylesheet" type="text/css" />
<!-- Head js -->
<script src="~/assets/js/head.js"></script>
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
<style>
    body.authentication-bg-pattern {
        background-image: url('@Url.Content("~/assets/images/bg-material1.jpg")');
        background-attachment: fixed;
        background-size: cover;
        background-repeat: no-repeat;
    }

    .logo-icon {
        font-size: 32px;
        color: #0065ff;
        text-shadow: 0 0 10px rgba(137, 164, 205, 0.6);
        transition: all 0.3s ease;
    }

        .logo-icon:hover {
            color: #a5bdf0;
            transform: scale(1.05);
        }

    .app-name {
        font-size: 28px;
        background: linear-gradient(90deg, #c33030, #0f54bd);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
        letter-spacing: 1px;
    }

    .subtitle {
        color: rgba(255, 255, 255, 0.85);
        font-size: 15px;
        font-weight: 400;
        margin-top: 5px;
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.25);
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(12px);
        border-radius: 16px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
        color: white;
    }

    .login-btn {
        background: linear-gradient(135deg, #f75964 0%, #078c46 100%);
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 0;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
    }

        .login-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
        }
</style>
    <style>
        .toggle-password {
            position: absolute;
            right: 12px;
            top: 38px;
            cursor: pointer;
            color: #6c757d;
            font-size: 18px;
        }

            .toggle-password:hover {
                color: #000;
            }
    </style>

</head>

<body class="authentication-bg-pattern" data-leftbar-size="default">

    <div class="account-pages mt-5 mb-5">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-8 col-lg-6 col-xl-4">
                    <div class="card bg-pattern">

                        <div class="card-body p-3">

                      

                            <div class="text-center w-75 m-auto">
                            
                                <h4 class="text-dark-50 text-center mt-3">Hi ! @user.UserName </h4>
                                <p class="text-muted mb-4">Set a new password to secure your account.</p>
                            </div>



                            <div class="mb-2 position-relative">
                                <label class="form-label">Current Password</label>
                                <input id="currentPwd" type="password" class="form-control" placeholder="Current password" />
                                <i class="bi bi-eye-slash toggle-password" data-target="#currentPwd"></i>
                            </div>

                            <div class="mb-2 position-relative">
                                <label class="form-label">New Password</label>
                                <input id="newPwd" type="password" class="form-control" placeholder="New password" />
                                <i class="bi bi-eye-slash toggle-password" data-target="#newPwd"></i>
                            </div>

                            <div class="mb-2 position-relative">
                                <label class="form-label">Confirm Password</label>
                                <input id="confirmPwd" type="password" class="form-control" placeholder="Confirm password" />
                                <i class="bi bi-eye-slash toggle-password" data-target="#confirmPwd"></i>
                            </div>



                            <div class="text-center d-grid">
                                <button id="btnChange" class="btn btn-primary">Change Password</button>
                            </div>




                        </div> <!-- end card-body -->
                    </div>
                    <!-- end card -->

                    <div class="row mt-3">
                        <div class="col-12 text-center">
                            <p class="text-white-50">Not you? return <a href="/Account/Login" class="text-white ms-1"><b>Log In</b></a></p>
                        </div> <!-- end col -->
                    </div>
                    <!-- end row -->

                </div> <!-- end col -->
            </div>
            <!-- end row -->
        </div>
        <!-- end container -->
    </div>
    <!-- end page -->



</body>


</html>
<script src="~/assets/js/vendor.min.js"></script>
<script src="~/assets/libs/sweetalert2/sweetalert2.all.min.js"></script>

<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<!-- Plugins js -->
<script src="~/assets/libs/dropzone/min/dropzone.min.js"></script>
<script src="~/assets/libs/dropify/js/dropify.min.js"></script>

<!-- Init js-->
<script src="~/assets/js/pages/form-fileuploads.init.js"></script>

<!-- App js -->
<script src="~/assets/js/app.min.js"></script>
<script>
    // 👁 Toggle password visibility
    $(document).on("click", ".toggle-password", function () {
        const input = $($(this).data("target"));
        const icon = $(this);

        if (input.attr("type") === "password") {
            input.attr("type", "text");
            icon.removeClass("bi-eye-slash").addClass("bi-eye");
        } else {
            input.attr("type", "password");
            icon.removeClass("bi-eye").addClass("bi-eye-slash");
        }
    });
</script>

<script>
    $("#btnChange").click(function () {
        const currentPwd = $("#currentPwd").val().trim();
        const newPwd = $("#newPwd").val().trim();
        const confirmPwd = $("#confirmPwd").val().trim();

        // ✅ Client-side validation
        if (!currentPwd || !newPwd || !confirmPwd) {
            Swal.fire({
                icon: "warning",
                title: "Missing Fields",
                text: "Please fill in all password fields.",
                confirmButtonColor: "#3085d6"
            });
            return;
        }

        if (newPwd !== confirmPwd) {
            Swal.fire({
                icon: "error",
                title: "Password Mismatch",
                text: "New Password and Confirm Password do not match!",
                confirmButtonColor: "#d33"
            });
            return;
        }

        const data = {
            CurrentPassword: currentPwd,
            NewPassword: newPwd
        };

        $.ajax({
            url: '/Account/ChangePassword',
            method: 'POST',
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (r) {
                if (r.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Password Changed",
                        text: "Your password has been changed successfully.",
                        showConfirmButton: false,
                        timer: 1800
                    }).then(() => {
                        // ✅ Log out automatically after success
                        $.ajax({
                            url: '/Account/Logout',
                            method: 'POST',
                            success: function () {
                                window.location.href = '/Account/Login';
                            }
                        });
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: r.message || "Password change failed.",
                        confirmButtonColor: "#d33"
                    });
                }
            },
            error: function () {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Something went wrong while changing password.",
                    confirmButtonColor: "#d33"
                });
            }
        });
    });
</script>
