@using CoreOne.DOMAIN.Models

@{
    ViewData["Title"] = "Role Permission";

    int pageNumber = ViewBag.PageNumber ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int totalRecords = ViewBag.TotalRecords ?? 0;
    int totalPages = (int)Math.Ceiling(totalRecords / (double)pageSize);

    string search = ViewBag.Search ?? "";
    string sortColumn = ViewBag.SortColumn ?? "RoleName";
    string sortDir = ViewBag.SortDir ?? "ASC";
    string searchCol = ViewBag.SearchCol ?? "RoleName";

    var rolePermissions = ViewBag.RolePermissions as List<RolePermission> ?? new List<RolePermission>();

    // Pagination window server-side: show up to 5 pages
    int maxWindow = 5;
    int startPage = 1;
    int endPage = totalPages;

    if (totalPages > maxWindow)
    {
        int half = maxWindow / 2; // 2
        startPage = pageNumber - half;
        endPage = pageNumber + half;

        if (startPage < 1)
        {
            startPage = 1;
            endPage = maxWindow;
        }
        else if (endPage > totalPages)
        {
            endPage = totalPages;
            startPage = totalPages - maxWindow + 1;
        }
    }
    else
    {
        startPage = 1;
        endPage = totalPages;
    }
}

<link href="~/css/rolepermission.css" rel="stylesheet" />

<div class="container-fluid  p-2" style="background:rgba(255, 255, 255, 0.08);">
    <div class="row" style="margin-top: -19px; margin-bottom: -6px;">
        <div class="col-12">
            <div class="page-title-box">
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="javascript:void(0);">Authorization</a></li>
                        <li class="breadcrumb-item"><a href="javascript:void(0);">Dashboard</a></li>

                    </ol>
                </div>
                <h4 class="page-title">Role Permission</h4>
            </div>
        </div>
    </div>





    <div class="card" style="background:rgba(255, 255, 255, 0.08);border-radius: 9px; border: 1px solid #b1d8ff; backdrop-filter: blur(12px);
              -webkit-backdrop-filter: blur(12px); border-radius: 16px; box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2); color: white;">
        <div class="card-body">

            <div class="row align-items-center p-2 mb-2" style="background:rgba(255, 255, 255, 0.08); border-radius: 9px; border: 1px solid #b1d8ff; backdrop-filter: blur(12px);
              -webkit-backdrop-filter: blur(12px); border-radius: 16px; box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2); color: white;">
                <div class="row justify-content-between">

                    <div class="col-auto">
                    <button type="button" class="btn btn-blue waves-effect waves-light" style="background: linear-gradient(135deg, #8173fa, #5a48e5);border-radius: 11px;"
                            onclick="window.location.href='/RolePermission/Index'">
                        <i class="mdi mdi-refresh-circle"></i> Refresh
                    </button>


                </div>



                    <div class="col-auto">

                    <has-permission module-id="6" action-id="1">

                        <button type="button" class="btn btn-success waves-effect waves-light float-end" onclick="openAddPermissionModal()" style="background: linear-gradient(135deg, #13dc72, #004993);    border-radius: 11px;">
                            <i class="mdi mdi-plus-circle"></i> Create Permission
                        </button>
                    </has-permission>
                </div>
                </div>
            </div>

            <div class="row align-items-center p-2" style="background:rgba(255, 255, 255, 0.08); border-radius: 9px; border: 1px solid #b1d8ff; backdrop-filter: blur(12px);
              -webkit-backdrop-filter: blur(12px); border-radius: 16px; box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2); color: white;">

                <div class="col-md-3">
                    <input type="search" id="searchBox" value="@search" class="form-control my-1 my-lg-0" placeholder="Search..." style="border-radius: 11px;  background: linear-gradient(135deg, #f8fbff, #ffffff);" />
                </div>
                <div class="col-md-3">
                    <select class="form-select my-1 my-lg-0" id="searchField" style="  background: linear-gradient(135deg, #f8fbff, #ffffff);   border-radius: 11px;">
                        @{
                            string[] searchableFields = new string[] { "RoleName" };//table column name
                            string[] searchableNames = new string[] { "Role Name" }; //user show name
                            for (int i = 0; i < searchableFields.Length; i++)
                            {
                                var field = searchableFields[i];
                                <option value="@field" selected="@(field == searchCol)">@searchableNames[i]</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <button id="btnSearch" class="btn icon-btn my-1 my-lg-0" style="display:none">
                        <i class="mdi mdi-magnify"></i>
                    </button>

                </div>
                <div class="col-md-2 ms-auto d-flex justify-content-end">
                    <select class="form-select my-1 my-lg-0" id="pageSize" style="border-radius: 11px; background: linear-gradient(135deg, #f8fbff, #ffffff);">
                        @{
                            int[] pageSizes = new int[] { 1, 10, 20, 50, 100 };
                            foreach (var size in pageSizes)
                            {
                                <option value="@size" selected="@(size == pageSize)">@size</option>
                            }
                        }
                    </select>
                </div>
            </div>

            <div class="table-responsive row align-items-center p-2 mt-2 mb-2" style="background:rgba(255, 255, 255, 0.08); border-radius: 9px; border: 1px solid #b1d8ff; backdrop-filter: blur(12px);
              -webkit-backdrop-filter: blur(12px); border-radius: 16px; box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2); color: white;">
                <table class="table table-bordered table-hover table-xl mt-2">
                    <thead>
                        <tr style="background: #f3f7f9;color:black">
                            <th style="color:#343a40">Sl No</th>

                            <th class="text-center" style="color:black">
                                <a href="javascript:void(0)" onclick="sortTable('RoleName')" class="d-flex justify-content-between align-items-center text-decoration-none" style="color:black">
                                    <span>Role Name</span>
                                    <span>
                                        @if (sortColumn == "RoleName")
                                        {
                                            if (sortDir == "ASC")
                                            {
                                                <i class="bi bi-arrow-up"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-arrow-down"></i>
                                            }
                                        }
                                        else
                                        {
                                            <i class="bi bi-arrow-down-up text-muted"></i>
                                        }
                                    </span>
                                </a>
                            </th>







                            <th class="text-center" style="color:black">Action</th>
                        </tr>
                    </thead>


                    <tbody>
                        @{
                            int count = ((pageNumber - 1) * pageSize) + 1;
                        }
                        @foreach (var r in rolePermissions)
                        {
                            <tr>
                                <td>@count</td>
                                <td class="text-body fw-semibold">@r.RoleName</td>




                                <td class="text-center d-flex justify-content-center gap-2">
                                    <has-permission module-id="6" action-id="8">
                                        <!-- Manage -->
                                        <button class="btn btn-primary btn-sm rounded-pill px-3"
                                                onclick="openPermissionModal(@r.RoleID, '@r.RoleName')">
                                            <i class="bi bi-gear-fill me-1"></i> Manage
                                        </button>
                                    </has-permission>
                                    <has-permission module-id="6" action-id="4">
                                        <!-- View -->
                                        <button class="btn btn-warning text-white btn-sm rounded-pill px-3"
                                                onclick="ViewPermissionModal(@r.RoleID, '@r.RoleName')">
                                            <i class="bi bi-eye-fill me-1"></i> View
                                        </button>
                                    </has-permission>
                                    <has-permission module-id="6" action-id="9">
                                        <!-- Deactivate -->
                                        <button class="btn btn-danger btn-sm rounded-pill px-3"
                                                onclick="deactivatePermission(@r.RoleID)">
                                            <i class="bi bi-x-circle-fill me-1"></i> Deactivate
                                        </button>
                                    </has-permission>
                                </td>




                            </tr>
                            count++;
                        }
                        @if (!rolePermissions.Any())
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted">No records found</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Pagination -->

                <div class="row mt-2">
                    <!-- Left: Info -->
                    <div class="col-sm-12 col-md-5">
                        <div class="dataTables_info" role="status" aria-live="polite" style="color:slategray">
                            Showing records <strong>@((pageNumber - 1) * pageSize + 1)</strong>
                            to <strong>@(Math.Min(pageNumber * pageSize, totalRecords))</strong>
                            of <strong>@totalRecords</strong>
                        </div>
                    </div>

                    <!-- Right: Pagination -->
                    <div class="col-sm-12 col-md-7">
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination pagination-rounded justify-content-end mb-0">
                                <!-- Prev Button -->
                                <li class="paginate_button page-item previous @(pageNumber == 1 ? "disabled" : "")">
                                    <a href="javascript:void(0)" data-page="@(pageNumber - 1)" class="page-link">
                                        <i class="mdi mdi-chevron-left"></i>
                                    </a>
                                </li>

                                <!-- If startPage > 1 show first and ellipsis -->
                                @if (startPage > 1)
                                {
                                    <li class="paginate_button page-item">
                                        <a href="javascript:void(0)" data-page="1" class="page-link">1</a>
                                    </li>
                                    @if (startPage > 2)
                                    {
                                        <li class="paginate_button page-item disabled">
                                            <span class="page-link">…</span>
                                        </li>
                                    }
                                }

                                <!-- Page Window -->
                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="paginate_button page-item @(i == pageNumber ? "active" : "")">
                                        <a href="javascript:void(0)" data-page="@i" class="page-link">@i</a>
                                    </li>
                                }

                                <!-- If endPage < totalPages show ellipsis + last -->
                                @if (endPage < totalPages)
                                {
                                    if (endPage < totalPages - 1)
                                    {
                                        <li class="paginate_button page-item disabled">
                                            <span class="page-link">…</span>
                                        </li>
                                    }
                                    <li class="paginate_button page-item">
                                        <a href="javascript:void(0)" data-page="@totalPages" class="page-link">@totalPages</a>
                                    </li>
                                }

                                <!-- Next Button -->
                                <li class="paginate_button page-item next @(pageNumber >= totalPages ? "disabled" : "")">
                                    <a href="javascript:void(0)" data-page="@(pageNumber + 1)" class="page-link">
                                        <i class="mdi mdi-chevron-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>


            </div>



        </div>
    </div>









</div>




<!-- =================== Modal =================== -->
<div class="modal fade" id="permissionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content border-0 shadow-lg rounded-4 overflow-hidden">

            <!-- Header -->
            <div class="modal-header text-white"
                 style="background:linear-gradient(135deg, #c6e4ff, #0b8dff);">
                <h5 class="modal-title fw-bol   d d-flex align-items-center">
                    <i class="bi bi-ui-checks-grid me-2"></i> Manage Role Permissions
                </h5>
                <button type="button"
                        class="btn btn-light btn-close-circle shadow-sm"
                        onclick="window.location.href='/RolePermission/Index'">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>

            <!-- Body -->
            <div class="modal-body bg-light">

                <!-- Role dropdown -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <label class="form-label fw-semibold text-dark">Select Role</label>
                        <select id="roleDropdown"
                                class="form-select shadow-sm border rounded-3 px-3 py-2"
                                onchange="onRoleChange()"
                                style="transition: all 0.2s ease;">
                            <option value="">-- Choose Role --</option>
                            @if (ViewBag.Roles != null)
                            {
                                List<RolePermission> roles = ViewBag.Roles as List<RolePermission>;
                                @foreach (var role in roles)
                                {
                                    <option value="@role.RoleID">@role.RoleName</option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <!-- Global Select All -->
                <div class="alert alert-light border rounded-3 shadow-sm d-flex align-items-center justify-content-between px-3 py-2">
                    <span class="fw-bold text-dark">
                        <i class="bi bi-check2-circle text-success"></i> Select All Permissions
                    </span>
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="selectAllGlobal">
                    </div>
                </div>

                <!-- Permissions container -->
                <div id="permissionsContainer" class="accordion mt-3">
                    <p class="text-muted">Choose a role to load permissions...</p>
                </div>
            </div>




            <div class="modal-footer border-0 pt-1 d-flex justify-content-between">
                <button type="button"
                        onclick="window.location.href='/RolePermission/Index'"
                        class="btn btn-warning btn-sm"
                        data-bs-dismiss="modal">
                    <i class="mdi mdi-close-circle-outline me-1"></i> Cancel
                </button>

                <button type="button" id="SaveRolePermissions" onclick="savePermissions()" class="btn btn-sm" style="background:forestgreen; color:white">
                    <i class="mdi mdi-content-save-outline me-1"></i> Save
                </button>
            </div>



        </div>
    </div>
</div>




@section Scripts {
    <script>
        (function () {
            // Utility to build Index URL with query params
            function buildUrl(params) {
                const base = '@Url.Action("Index", "RolePermission")';
                const qs = new URLSearchParams();
                qs.set('pageNumber', params.pageNumber ?? 1);
                qs.set('pageSize', params.pageSize ?? current.pageSize);
                if ((params.search ?? current.search) !== '') qs.set('search', params.search ?? current.search);
                qs.set('searchCol', params.searchCol ?? current.searchCol);
                qs.set('sortColumn', params.sortColumn ?? current.sortColumn);
                qs.set('sortDir', params.sortDir ?? current.sortDir);
                return base + '?' + qs.toString();
            }

            // Current server-side values
            const current = {
                pageNumber: parseInt('@pageNumber'),
                pageSize: parseInt('@pageSize'),
                search: '@(search ?? "")',
                searchCol: '@(searchCol ?? "")',
                sortColumn: '@(sortColumn ?? "")',
                sortDir: '@(sortDir ?? "")'
            };

            // Debounce
            function debounce(fn, delay) {
                let t;
                return function (...args) {
                    clearTimeout(t);
                    t = setTimeout(() => fn.apply(this, args), delay);
                };
            }

            function navigateTo(opts) {
                const params = {
                    pageNumber: opts.pageNumber ?? 1,
                    pageSize: opts.pageSize ?? current.pageSize,
                    search: opts.search ?? current.search,
                    searchCol: opts.searchCol ?? current.searchCol,
                    sortColumn: opts.sortColumn ?? current.sortColumn,
                    sortDir: opts.sortDir ?? current.sortDir
                };
                window.location.href = buildUrl(params);
            }

            // Elements
            const searchInput = document.getElementById('searchBox');
            const searchField = document.getElementById('searchField');
            const pageSizeSelect = document.getElementById('pageSize');
            const paginationLinks = document.querySelectorAll('.pagination a.page-link');

            // Live search
            const onSearch = debounce(function (e) {
                const val = e.target.value.trim();
                navigateTo({
                    pageNumber: 1,
                    search: val,
                    searchCol: searchField.value
                });
            }, 450);

            if (searchInput) searchInput.addEventListener('input', onSearch);

            // search column change -> page 1
            if (searchField) searchField.addEventListener('change', function (e) {
                navigateTo({
                    pageNumber: 1,
                    search: searchInput.value.trim(),
                    searchCol: e.target.value
                });
            });

            // pageSize change -> page 1
            if (pageSizeSelect) pageSizeSelect.addEventListener('change', function (e) {
                navigateTo({
                    pageNumber: 1,
                    pageSize: parseInt(e.target.value, 10),
                    search: searchInput.value.trim()
                });
            });

            // pagination clicks
            document.querySelectorAll('.pagination a.page-link').forEach(function (el) {
                el.addEventListener('click', function (ev) {
                    ev.preventDefault();
                    const page = parseInt(el.getAttribute('data-page'), 10) || 1;
                    // clamp page
                    const target = Math.max(1, page);
                    navigateTo({
                        pageNumber: target,
                        pageSize: parseInt(pageSizeSelect.value, 10),
                        search: searchInput.value.trim()
                    });
                });
            });

            // Sorting: toggles direction; clicking a different column resets to ASC
            window.sortTable = function (column) {
                let newDir = current.sortDir === 'ASC' ? 'DESC' : 'ASC';
                if (current.sortColumn !== column) newDir = 'ASC';
                navigateTo({
                    pageNumber: 1,
                    sortColumn: column,
                    sortDir: newDir,
                    search: searchInput.value.trim()
                });
            };
        })();




    </script>

    <script src="~/js/rolepermission.js"></script>
}